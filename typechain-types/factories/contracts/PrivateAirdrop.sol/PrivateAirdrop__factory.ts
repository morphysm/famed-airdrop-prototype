/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PrivateAirdrop,
  PrivateAirdropInterface,
} from "../../../contracts/PrivateAirdrop.sol/PrivateAirdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IZekoGenerativeNFT",
        name: "_nftToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountPerRedemption",
        type: "uint256",
      },
      {
        internalType: "contract IPlonkVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "amountPerRedemption",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
    ],
    name: "collectAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenIdToBeAirdropped",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftToken",
    outputs: [
      {
        internalType: "contract IZekoGenerativeNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_firstNFTID",
        type: "uint256",
      },
    ],
    name: "setInitialTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
    ],
    name: "updateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200177638038062001776833981810160405281019062000037919062000219565b620000576200004b620000f160201b60201c565b620000f960201b60201c565b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260028190555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600481905550505050506200035d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001ce81620002f5565b92915050565b600081519050620001e5816200030f565b92915050565b600081519050620001fc8162000329565b92915050565b600081519050620002138162000343565b92915050565b600080600080608085870312156200023057600080fd5b60006200024087828801620001eb565b9450506020620002538782880162000202565b93505060406200026687828801620001d4565b92505060606200027987828801620001bd565b91505092959194509250565b60006200029282620002cb565b9050919050565b6000819050919050565b6000620002b08262000285565b9050919050565b6000620002c48262000285565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620003008162000299565b81146200030c57600080fd5b50565b6200031a81620002a3565b81146200032657600080fd5b50565b6200033481620002b7565b81146200034057600080fd5b50565b6200034e81620002eb565b81146200035a57600080fd5b50565b611409806200036d6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80637f0d715911610081578063d06fcba81161005b578063d06fcba814610205578063ebf0c71714610223578063f2fde38b14610241576100d4565b80637f0d7159146101995780638da5cb5b146101b7578063b9f11b51146101d5576100d4565b806338c86911116100b257806338c86911146101415780637050796e14610171578063715018a61461018f576100d4565b8063150b7a02146100d9578063213e0b171461010957806321ff997014610125575b600080fd5b6100f360048036038101906100ee9190610b58565b61025d565b6040516101009190610ee9565b60405180910390f35b610123600480360381019061011e9190610c25565b610271565b005b61013f600480360381019061013a9190610bfc565b610669565b005b61015b60048036038101906101569190610bfc565b6106ef565b6040516101689190610eb3565b60405180910390f35b61017961070f565b6040516101869190610ff8565b60405180910390f35b610197610715565b005b6101a161079d565b6040516101ae9190610ff8565b60405180910390f35b6101bf6107a3565b6040516101cc9190610e61565b60405180910390f35b6101ef60048036038101906101ea9190610c7d565b6107cc565b6040516101fc9190610ff8565b60405180910390f35b61020d610839565b60405161021a9190610f3d565b60405180910390f35b61022b61085f565b6040516102389190610ece565b60405180910390f35b61025b60048036038101906102569190610b2f565b610865565b005b600063150b7a0260e01b9050949350505050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018160001c106102d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cd90610fb8565b60405180910390fd5b6006600082815260200190815260200160002060009054906101000a900460ff1615610337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032e90610f78565b60405180910390fd5b6000600367ffffffffffffffff81111561037a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156103a85781602001602082028036833780820191505090505b50905060045460001c816000815181106103eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508160001c81600181518110610435577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250503373ffffffffffffffffffffffffffffffffffffffff1681600281518110610492577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e8e1e138585846040518463ffffffff1660e01b81526004016104fd93929190610f04565b60206040518083038186803b15801561051557600080fd5b505afa158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d9190610bd3565b61058c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058390610f98565b60405180910390fd5b60016006600084815260200190815260200160002060006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30336005546040518463ffffffff1660e01b815260040161061993929190610e7c565b600060405180830381600087803b15801561063357600080fd5b505af1158015610647573d6000803e3d6000fd5b505050506005600081548092919061065e906111a6565b919050555050505050565b61067161095d565b73ffffffffffffffffffffffffffffffffffffffff1661068f6107a3565b73ffffffffffffffffffffffffffffffffffffffff16146106e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106dc90610fd8565b60405180910390fd5b8060048190555050565b60066020528060005260406000206000915054906101000a900460ff1681565b60055481565b61071d61095d565b73ffffffffffffffffffffffffffffffffffffffff1661073b6107a3565b73ffffffffffffffffffffffffffffffffffffffff1614610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890610fd8565b60405180910390fd5b61079b6000610965565b565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082857600080fd5b816005819055506005549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b61086d61095d565b73ffffffffffffffffffffffffffffffffffffffff1661088b6107a3565b73ffffffffffffffffffffffffffffffffffffffff16146108e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d890610fd8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610951576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094890610f58565b60405180910390fd5b61095a81610965565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610a3c610a3784611038565b611013565b905082815260208101848484011115610a5457600080fd5b610a5f848285611166565b509392505050565b600081359050610a7681611377565b92915050565b600081519050610a8b8161138e565b92915050565b600081359050610aa0816113a5565b92915050565b60008083601f840112610ab857600080fd5b8235905067ffffffffffffffff811115610ad157600080fd5b602083019150836001820283011115610ae957600080fd5b9250929050565b600082601f830112610b0157600080fd5b8135610b11848260208601610a29565b91505092915050565b600081359050610b29816113bc565b92915050565b600060208284031215610b4157600080fd5b6000610b4f84828501610a67565b91505092915050565b60008060008060808587031215610b6e57600080fd5b6000610b7c87828801610a67565b9450506020610b8d87828801610a67565b9350506040610b9e87828801610b1a565b925050606085013567ffffffffffffffff811115610bbb57600080fd5b610bc787828801610af0565b91505092959194509250565b600060208284031215610be557600080fd5b6000610bf384828501610a7c565b91505092915050565b600060208284031215610c0e57600080fd5b6000610c1c84828501610a91565b91505092915050565b600080600060408486031215610c3a57600080fd5b600084013567ffffffffffffffff811115610c5457600080fd5b610c6086828701610aa6565b93509350506020610c7386828701610a91565b9150509250925092565b600060208284031215610c8f57600080fd5b6000610c9d84828501610b1a565b91505092915050565b6000610cb28383610e43565b60208301905092915050565b610cc7816110c4565b82525050565b6000610cd882611079565b610ce28185611091565b9350610ced83611069565b8060005b83811015610d1e578151610d058882610ca6565b9750610d1083611084565b925050600181019050610cf1565b5085935050505092915050565b610d34816110d6565b82525050565b610d43816110e2565b82525050565b610d52816110ec565b82525050565b6000610d6483856110a2565b9350610d71838584611166565b610d7a8361124d565b840190509392505050565b610d8e81611142565b82525050565b6000610da16026836110b3565b9150610dac8261125e565b604082019050919050565b6000610dc46018836110b3565b9150610dcf826112ad565b602082019050919050565b6000610de76019836110b3565b9150610df2826112d6565b602082019050919050565b6000610e0a6021836110b3565b9150610e15826112ff565b604082019050919050565b6000610e2d6020836110b3565b9150610e388261134e565b602082019050919050565b610e4c81611138565b82525050565b610e5b81611138565b82525050565b6000602082019050610e766000830184610cbe565b92915050565b6000606082019050610e916000830186610cbe565b610e9e6020830185610cbe565b610eab6040830184610e52565b949350505050565b6000602082019050610ec86000830184610d2b565b92915050565b6000602082019050610ee36000830184610d3a565b92915050565b6000602082019050610efe6000830184610d49565b92915050565b60006040820190508181036000830152610f1f818587610d58565b90508181036020830152610f338184610ccd565b9050949350505050565b6000602082019050610f526000830184610d85565b92915050565b60006020820190508181036000830152610f7181610d94565b9050919050565b60006020820190508181036000830152610f9181610db7565b9050919050565b60006020820190508181036000830152610fb181610dda565b9050919050565b60006020820190508181036000830152610fd181610dfd565b9050919050565b60006020820190508181036000830152610ff181610e20565b9050919050565b600060208201905061100d6000830184610e52565b92915050565b600061101d61102e565b90506110298282611175565b919050565b6000604051905090565b600067ffffffffffffffff8211156110535761105261121e565b5b61105c8261124d565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110cf82611118565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061114d82611154565b9050919050565b600061115f82611118565b9050919050565b82818337600083830152505050565b61117e8261124d565b810181811067ffffffffffffffff8211171561119d5761119c61121e565b5b80604052505050565b60006111b182611138565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156111e4576111e36111ef565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f41697264726f7020616c72656164792072656465656d65640000000000000000600082015250565b7f50726f6f6620766572696669636174696f6e206661696c656400000000000000600082015250565b7f4e756c6c6966696572206973206e6f742077697468696e20746865206669656c60008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b611380816110c4565b811461138b57600080fd5b50565b611397816110d6565b81146113a257600080fd5b50565b6113ae816110e2565b81146113b957600080fd5b50565b6113c581611138565b81146113d057600080fd5b5056fea264697066735822122057100eb90fa1327ce49d8cd8a6567eed028c6ed349033f9fa5dc960475010df764736f6c63430008010033";

type PrivateAirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateAirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateAirdrop__factory extends ContractFactory {
  constructor(...args: PrivateAirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nftToken: string,
    _amountPerRedemption: BigNumberish,
    _verifier: string,
    _root: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateAirdrop> {
    return super.deploy(
      _nftToken,
      _amountPerRedemption,
      _verifier,
      _root,
      overrides || {}
    ) as Promise<PrivateAirdrop>;
  }
  override getDeployTransaction(
    _nftToken: string,
    _amountPerRedemption: BigNumberish,
    _verifier: string,
    _root: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nftToken,
      _amountPerRedemption,
      _verifier,
      _root,
      overrides || {}
    );
  }
  override attach(address: string): PrivateAirdrop {
    return super.attach(address) as PrivateAirdrop;
  }
  override connect(signer: Signer): PrivateAirdrop__factory {
    return super.connect(signer) as PrivateAirdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateAirdropInterface {
    return new utils.Interface(_abi) as PrivateAirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateAirdrop {
    return new Contract(address, _abi, signerOrProvider) as PrivateAirdrop;
  }
}
