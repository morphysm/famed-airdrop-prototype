/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  PrivateAirdrop,
  PrivateAirdropInterface,
} from '../../../contracts/PrivateAirdrop.sol/PrivateAirdrop';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IZekoGenerativeNFT',
        name: '_nftToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amountPerRedemption',
        type: 'uint256',
      },
      {
        internalType: 'contract IPlonkVerifier',
        name: '_verifier',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: '_root',
        type: 'bytes32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'amountPerRedemption',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'proof',
        type: 'bytes',
      },
      {
        internalType: 'bytes32',
        name: 'nullifierHash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'rewardID',
        type: 'bytes32',
      },
    ],
    name: 'collectAirdrop',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nextTokenIdToBeAirdropped',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nftToken',
    outputs: [
      {
        internalType: 'contract IZekoGenerativeNFT',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'nullifierSpent',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC721Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'root',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_firstNFTID',
        type: 'uint256',
      },
    ],
    name: 'setInitialTokenId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'newRoot',
        type: 'bytes32',
      },
    ],
    name: 'updateRoot',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620017d5380380620017d5833981810160405281019062000037919062000219565b620000576200004b620000f160201b60201c565b620000f960201b60201c565b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260028190555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600481905550505050506200035d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001ce81620002f5565b92915050565b600081519050620001e5816200030f565b92915050565b600081519050620001fc8162000329565b92915050565b600081519050620002138162000343565b92915050565b600080600080608085870312156200023057600080fd5b60006200024087828801620001eb565b9450506020620002538782880162000202565b93505060406200026687828801620001d4565b92505060606200027987828801620001bd565b91505092959194509250565b60006200029282620002cb565b9050919050565b6000819050919050565b6000620002b08262000285565b9050919050565b6000620002c48262000285565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620003008162000299565b81146200030c57600080fd5b50565b6200031a81620002a3565b81146200032657600080fd5b50565b6200033481620002b7565b81146200034057600080fd5b50565b6200034e81620002eb565b81146200035a57600080fd5b50565b611468806200036d6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80637f0d715911610081578063d06fcba81161005b578063d06fcba814610205578063ebf0c71714610223578063f2fde38b14610241576100d4565b80637f0d7159146101995780638da5cb5b146101b7578063b9f11b51146101d5576100d4565b80637050796e116100b25780637050796e14610155578063715018a6146101735780637dd14b731461017d576100d4565b8063150b7a02146100d957806321ff99701461010957806338c8691114610125575b600080fd5b6100f360048036038101906100ee9190610ba3565b61025d565b6040516101009190610f48565b60405180910390f35b610123600480360381019061011e9190610c47565b610271565b005b61013f600480360381019061013a9190610c47565b6102f7565b60405161014c9190610f12565b60405180910390f35b61015d610317565b60405161016a9190611057565b60405180910390f35b61017b61031d565b005b61019760048036038101906101929190610c70565b6103a5565b005b6101a16107e8565b6040516101ae9190611057565b60405180910390f35b6101bf6107ee565b6040516101cc9190610ec0565b60405180910390f35b6101ef60048036038101906101ea9190610cdc565b610817565b6040516101fc9190611057565b60405180910390f35b61020d610884565b60405161021a9190610f9c565b60405180910390f35b61022b6108aa565b6040516102389190610f2d565b60405180910390f35b61025b60048036038101906102569190610b7a565b6108b0565b005b600063150b7a0260e01b9050949350505050565b6102796109a8565b73ffffffffffffffffffffffffffffffffffffffff166102976107ee565b73ffffffffffffffffffffffffffffffffffffffff16146102ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e490611037565b60405180910390fd5b8060048190555050565b60066020528060005260406000206000915054906101000a900460ff1681565b60055481565b6103256109a8565b73ffffffffffffffffffffffffffffffffffffffff166103436107ee565b73ffffffffffffffffffffffffffffffffffffffff1614610399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039090611037565b60405180910390fd5b6103a360006109b0565b565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c1061040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040190611017565b60405180910390fd5b6006600083815260200190815260200160002060009054906101000a900460ff161561046b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046290610fd7565b60405180910390fd5b6000600467ffffffffffffffff8111156104ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104dc5781602001602082028036833780820191505090505b50905060045460001c8160008151811061051f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508260001c81600181518110610569577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508160001c816002815181106105b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250503373ffffffffffffffffffffffffffffffffffffffff1681600381518110610610577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e8e1e138686846040518463ffffffff1660e01b815260040161067b93929190610f63565b60206040518083038186803b15801561069357600080fd5b505afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb9190610c1e565b61070a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070190610ff7565b60405180910390fd5b60016006600085815260200190815260200160002060006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30336005546040518463ffffffff1660e01b815260040161079793929190610edb565b600060405180830381600087803b1580156107b157600080fd5b505af11580156107c5573d6000803e3d6000fd5b50505050600560008154809291906107dc90611205565b91905055505050505050565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461087357600080fd5b816005819055506005549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6108b86109a8565b73ffffffffffffffffffffffffffffffffffffffff166108d66107ee565b73ffffffffffffffffffffffffffffffffffffffff161461092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092390611037565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561099c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099390610fb7565b60405180910390fd5b6109a5816109b0565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610a87610a8284611097565b611072565b905082815260208101848484011115610a9f57600080fd5b610aaa8482856111c5565b509392505050565b600081359050610ac1816113d6565b92915050565b600081519050610ad6816113ed565b92915050565b600081359050610aeb81611404565b92915050565b60008083601f840112610b0357600080fd5b8235905067ffffffffffffffff811115610b1c57600080fd5b602083019150836001820283011115610b3457600080fd5b9250929050565b600082601f830112610b4c57600080fd5b8135610b5c848260208601610a74565b91505092915050565b600081359050610b748161141b565b92915050565b600060208284031215610b8c57600080fd5b6000610b9a84828501610ab2565b91505092915050565b60008060008060808587031215610bb957600080fd5b6000610bc787828801610ab2565b9450506020610bd887828801610ab2565b9350506040610be987828801610b65565b925050606085013567ffffffffffffffff811115610c0657600080fd5b610c1287828801610b3b565b91505092959194509250565b600060208284031215610c3057600080fd5b6000610c3e84828501610ac7565b91505092915050565b600060208284031215610c5957600080fd5b6000610c6784828501610adc565b91505092915050565b60008060008060608587031215610c8657600080fd5b600085013567ffffffffffffffff811115610ca057600080fd5b610cac87828801610af1565b94509450506020610cbf87828801610adc565b9250506040610cd087828801610adc565b91505092959194509250565b600060208284031215610cee57600080fd5b6000610cfc84828501610b65565b91505092915050565b6000610d118383610ea2565b60208301905092915050565b610d2681611123565b82525050565b6000610d37826110d8565b610d4181856110f0565b9350610d4c836110c8565b8060005b83811015610d7d578151610d648882610d05565b9750610d6f836110e3565b925050600181019050610d50565b5085935050505092915050565b610d9381611135565b82525050565b610da281611141565b82525050565b610db18161114b565b82525050565b6000610dc38385611101565b9350610dd08385846111c5565b610dd9836112ac565b840190509392505050565b610ded816111a1565b82525050565b6000610e00602683611112565b9150610e0b826112bd565b604082019050919050565b6000610e23601883611112565b9150610e2e8261130c565b602082019050919050565b6000610e46601983611112565b9150610e5182611335565b602082019050919050565b6000610e69602183611112565b9150610e748261135e565b604082019050919050565b6000610e8c602083611112565b9150610e97826113ad565b602082019050919050565b610eab81611197565b82525050565b610eba81611197565b82525050565b6000602082019050610ed56000830184610d1d565b92915050565b6000606082019050610ef06000830186610d1d565b610efd6020830185610d1d565b610f0a6040830184610eb1565b949350505050565b6000602082019050610f276000830184610d8a565b92915050565b6000602082019050610f426000830184610d99565b92915050565b6000602082019050610f5d6000830184610da8565b92915050565b60006040820190508181036000830152610f7e818587610db7565b90508181036020830152610f928184610d2c565b9050949350505050565b6000602082019050610fb16000830184610de4565b92915050565b60006020820190508181036000830152610fd081610df3565b9050919050565b60006020820190508181036000830152610ff081610e16565b9050919050565b6000602082019050818103600083015261101081610e39565b9050919050565b6000602082019050818103600083015261103081610e5c565b9050919050565b6000602082019050818103600083015261105081610e7f565b9050919050565b600060208201905061106c6000830184610eb1565b92915050565b600061107c61108d565b905061108882826111d4565b919050565b6000604051905090565b600067ffffffffffffffff8211156110b2576110b161127d565b5b6110bb826112ac565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061112e82611177565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111ac826111b3565b9050919050565b60006111be82611177565b9050919050565b82818337600083830152505050565b6111dd826112ac565b810181811067ffffffffffffffff821117156111fc576111fb61127d565b5b80604052505050565b600061121082611197565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112435761124261124e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f41697264726f7020616c72656164792072656465656d65640000000000000000600082015250565b7f50726f6f6620766572696669636174696f6e206661696c656400000000000000600082015250565b7f4e756c6c6966696572206973206e6f742077697468696e20746865206669656c60008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6113df81611123565b81146113ea57600080fd5b50565b6113f681611135565b811461140157600080fd5b50565b61140d81611141565b811461141857600080fd5b50565b61142481611197565b811461142f57600080fd5b5056fea2646970667358221220a997595f935a8766ac3a768aeb0c998a76c9d05f9afd93de89ec79a65000acd164736f6c63430008010033';

type PrivateAirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateAirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateAirdrop__factory extends ContractFactory {
  constructor(...args: PrivateAirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nftToken: string,
    _amountPerRedemption: BigNumberish,
    _verifier: string,
    _root: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateAirdrop> {
    return super.deploy(
      _nftToken,
      _amountPerRedemption,
      _verifier,
      _root,
      overrides || {}
    ) as Promise<PrivateAirdrop>;
  }
  override getDeployTransaction(
    _nftToken: string,
    _amountPerRedemption: BigNumberish,
    _verifier: string,
    _root: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nftToken,
      _amountPerRedemption,
      _verifier,
      _root,
      overrides || {}
    );
  }
  override attach(address: string): PrivateAirdrop {
    return super.attach(address) as PrivateAirdrop;
  }
  override connect(signer: Signer): PrivateAirdrop__factory {
    return super.connect(signer) as PrivateAirdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateAirdropInterface {
    return new utils.Interface(_abi) as PrivateAirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateAirdrop {
    return new Contract(address, _abi, signerOrProvider) as PrivateAirdrop;
  }
}
